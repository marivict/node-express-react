{"version":3,"sources":["components/Notes.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","find","n","changedNote","returnedNotes","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","returnedNote","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"0MAaeA,EAXF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACXC,EAAQF,EAAKG,UACjB,qBAAuB,iBACzB,OACI,+BACKH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,QCOjCI,EAbM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAe,OAAZA,EACQ,KAIP,qBAAKC,UAAU,QAAf,SACKD,KCNPE,EAAU,aAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALC,SAACG,EAAIF,GAEjB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC4E9BK,MAvFf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAGFC,qBAAU,WACRC,IAEClB,MAAK,SAAAmB,GACJT,EAASS,QAEV,IAEH,IAqBQC,EAAcP,EAClBJ,EACDA,EAAMY,QAAO,SAAAjC,GAAI,OAAGA,EAAKG,aAmB1B,OACE,gCACG,uCACA,cAAC,EAAD,CAAcI,QAASoB,IACvB,8BACE,yBAAQtB,QAAS,kBAAMqB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGnC,6BACGO,EAAYE,KAAI,SAAClC,EAAMmC,GACtB,OAAO,cAAC,EAAD,CAELnC,KAAMA,EACNC,iBAAqB,kBA/BJ,SAACgB,GAC1B,IAAMjB,EAAOqB,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAEpB,KAAOA,KAChCqB,EAAW,2BAAOtC,GAAP,IAAaG,WAAYH,EAAKG,YAEhD2B,EAAmBb,EAAIqB,GAAa1B,MAAK,SAAA2B,GACtCjB,EAASD,EAAMa,KAAI,SAAAlC,GAAI,OAAIA,EAAKiB,KAAOA,EAAKjB,EAAOuC,EAAczB,YAEhE0B,OAAM,SAAAC,GACLb,EAAgB,YAAD,OACD5B,EAAKI,QADJ,qCAGfsC,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAEpB,KAAOA,SAiBL0B,CAAmB3C,EAAKiB,MAF9CkB,QAOX,uBAAMS,SA7DK,SAACC,GACdA,EAAMC,iBACN,IAAMC,EAAa,CACjB3C,QAASmB,EACTyB,MAAK,IAAIC,MAAOC,cAChB/C,UAAWgD,KAAKC,SAAW,IAG7BtB,EACQiB,GACPnC,MAAM,SAAAyC,GACL/B,EAASD,EAAMiC,OAAOD,IACtB7B,EAAW,QAiDX,UACE,uBACE+B,MAAOhC,EACPiC,SA/CiB,SAACX,GACxBrB,EAAWqB,EAAMY,OAAOF,UAgDpB,wBAAQG,KAAK,SAAb,yBCjFRC,IAASC,OACP,8BACE,cAAC,EAAD,CAAKvC,OAAK,MAEZwC,SAASC,eAAe,W","file":"static/js/main.858e9e2c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n    const label = note.important\r\n    ? 'make not important' : 'make important'\r\n    return (\r\n        <li>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if(message === null){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\n\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update =  (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update}","import React,{useState, useEffect} from 'react'\nimport axios from 'axios'\nimport Note from './components/Notes'\nimport Notification from './components/Notification'\nimport noteService from './services/notes' \n\nfunction App() {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('')\n\n\nuseEffect(() =>{\n  noteService\n  .getAll()\n  .then(initialNotes => {\n    setNotes(initialNotes)\n  })\n}, [])\n\nconst addNotes = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date:new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService\n    .create(noteObject)\n    .then( returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n   \n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  :notes.filter(note =>note.important)\n  \n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important: !note.important}\n\n   noteService.update(id, changedNote).then(returnedNotes => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNotes.data))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `the note ${note.content} was already deleted from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n  return (\n    <div>\n       <h1>Notes</h1>\n       <Notification message={errorMessage} />\n       <div>\n         <button onClick={() => setShowAll(!showAll)}>\n           show {showAll ? 'important' : 'all'}\n         </button>\n       </div>\n      <ul>\n        {notesToShow.map((note, i) => {\n          return(<Note \n            key={i} \n            note={note}\n            toggleImportance = { () => toggleImportanceOf(note.id)}\n             />\n         ) })}\n      </ul>\n\n      <form onSubmit={addNotes}>\n        <input \n          value={newNote} \n          onChange={handleNoteChange}\n          />\n        <button type='submit'>Save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <div>\n    <App notes/>\n  </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}